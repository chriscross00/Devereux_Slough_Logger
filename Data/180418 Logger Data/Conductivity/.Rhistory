s
s <- new("student", name = "John", age = 21)
s
isS4(s)
student <- setClass("student", slots = list(name = "character", age = "numeric", GPA = "numeric"))
student(name = "John", 21)
student(name = "John", age = 21, GPA = 4.0)
s@age
s@GPA <- 3.7
s
setRefClass("student")
student <- setRefClass("student", fields = list(name = "character", age = "numeric", GPA = "numeric"))
s <- student(name = "John", age = 21, GPA = 2.1)
student <- setRefClass("student", fields = list(name = "character", age = "numeric", GPA = "numeric"))
s <- student(name = "John", age = 21, GPA = 2.1)
t <- student(name = "John", age = 21, GPA = 2.1)
student <- setRefClass("student", fields = list(name = "character", age = "numeric", GPA = "numeric"))
s <- student(name = "John", age = 21, GPA = 3.5)
setRefClass("student")
student <- setRefClass("student", fields = list(name = "character", age = "numeric", GPA = "numeric"))
t <- student(name = "John", age = 21, GPA = 2.1)
setRefClass("student", fields = list(name = "character", age = "numeric", GPA = "numeric"))
student <- setRefClass("student", fields = list(name = "character", age = "numeric", GPA = "numeric"))
t <- student(name = "John", age = 21, GPA = 2.1)
t
student <- setRefClass("student", fields = c(name = "character", age = "numeric", GPA = "numeric"))
t <- student(name = "John", age = 21, GPA = 2.1)
t
student <- setRefClass(Class = "student", fields = c(name = "character", age = "numeric", GPA = "numeric"))
t <- student(name = "John", age = 21, GPA = 2.1)
t
setRefClass("student")
setRefClass("student", fields = list(name = "character", age = "numeric", GPA = "numeric"))
student <- setRefClass("student",
fields = list(name = "character", age = "numeric", GPA = "numeric"))
s <- student(name = "John", age = 21, GPA = 3.5)
s
poly <- setRefClass("Polygon", fields = list(sides = "numeric"))
ty <- poly(sides = 2)
ty
ty <- poly(sides = 2.5)
ty
student <- setRefClass("student",
fields = list(name = "character", age = "numeric", GPA = "numeric"))
s <- student(name = "John", age = 21, GPA = 3.5)
student <- setRefClass("student",
fields = list(name = "character", age = "numeric", GPA = "numeric"))
s <- student(name = "John", age = 21, GPA = 3)
s
div.sq <- function(num1, num2) {
sq <- num1/num2
sq <- sq^2
return(sq)
}
div.sq(6, 3)
div.sq <- function(num1, num2) {
sq <- num1/num2
sq <- sq^2
}
div.sq(6, 3)
xy <- data.frame("value" = c(0:2), "prob" = c(0.16, 0.48, 0.36), "mean" = rep(1.2, 3))
xy
xy <- data.frame("value" = c(0:2), "prob" = c(0.16, 0.48, 0.36), "mean" = rep(1.2, len("value")))
xy <- data.frame("value" = c(0:2), "prob" = c(0.16, 0.48, 0.36), "mean" = rep(1.2, length("value")))
xy
var <- function(value, prob, mean) {
sum[prob*(value - mean)^2]
}
sapply(xy, var)
var(0, 0.16, 1.2)
var((0, 0.16, 1.2), (1, 0.48, 1.2))
var((0, 0.16, 1.2) (1, 0.48, 1.2))
var(0, 0.16, 1.2)
var(1, 0.48, 1.2)
var(2, 0.36, 1.2)
var <- function(value, prob, mean) {
prob*(value - mean)^2
}
var(0, 0.16, 1.2)
var(1, 0.48, 1.2)
var(2, 0.36, 1.2)
sapply(xy, var)
for (i in 1:10) {
a = i%%3 == 0
b = i%%5 == 0
}
for (i in 1:10) {
a = i%%3 == 0
b = i%%5 == 0
print(a)
print(b)
}
input <- 1:10
mul <- ((input %% 3) or (input %% 5)) == 0
mul <- (input %% 3) == 0
head(mul)
input[(input %% 3) == 0]
a <- input[(input %% 3) == 0]
a
sum(a)
a <- input[((input %% 3) == 0), ((input %% 5) == 0)]
a <- input[((input %% 3) == 0)
((input %% 5) == 0)]
(input %% 3|5) == 0
(input %% 3 | 5) == 0
input <- 1:10
three <- input[(input %% 3) == 0]
five <- input[(input %% 3) == 0]
print(three)
print(5)
print(five)
five <- input[(input %% 5) == 0]
print(three)
print(five)
input <- 1:1000
three <- input[(input %% 3) == 0]
five <- input[(input %% 5) == 0]
print(three)
print(five)
sum(three + five)
three <- sum(three)
three
five <- sum(five)
five
sum(three + five)
?as.array
as.array(three)
three <- input[(input %% 3) == 0]
five <- input[(input %% 5) == 0]
as.array(three)
as.data.frame(a = three)
as.data.frame()
?as.data.frame()
as.data.frame(three)
View(three)
three <- input[(input %% 3) == 0]
list(three)
as.data.frame(three)
View(three)
three <- input[(input %% 3) == 0]
as.data.frame(three)
View(three)
l1 = list(2, 3)
l1
input <- list(1:1000)
three <- input[(input %% 3) == 0]
input <- c(1:1000)
three <- input[(input %% 3) == 0]
five <- input[(input %% 5) == 0]
print(three)
print(five)
as.data.frame(three)
View(three)
for (i in 1:1000) {
print(i)
}
for (i in 1:1000) {
if (i %% 3 == 0) {
returnValue()
}
print("work")
}
?return
for (i in 1:1000) {
if (i %% 3 == 0) {
return()
}
print("work")
}
for (i in 1:1000) {
if (i %% 3 == 0) {
return(i)
}
}
for (i in 1:1000) {
if (i %% 3 == 0) {
print(i)
}
else print("not")
}
for (i in 1:10) {
if (i %% 3 == 0) {
print(i)
}
else print("not")
}
for (i in 1:10) {
if (i %% 3 == 0) {
print(i)
}
}
for (i in 1:10) {
if (i %% 3 == 0) {
print(i)
} else if (i %% 5 == 0){
print(i)
}
}
for (i in 1:15) {
if (i %% 3 == 0) {
print(i)
} else if (i %% 5 == 0){
print(i)
}
}
for (i in 1:1000) {
if (i %% 3 == 0) {
print(i)
} else if (i %% 5 == 0){
print(i)
}
}
for (i in 1:1000) {
if (i %% 3 == 0) {
print(i)
} else if (i %% 5 == 0){
print(i)
}
}
for (i in 1:1000) {
if (i %% 3 == 0) {
a[i] <- return()
} else if (i %% 5 == 0){
print(i)
}
}
a
a <- 0
for (i in 1:10) {
if (i %% 3 == 0) {
a[i] <- return()
} else if (i %% 5 == 0){
a[i] <- return()
}
}
a
a <- for (i in 1:10) {
if (i %% 3 == 0) {
return[i]
} else if (i %% 5 == 0){
return[i]
}
}
a <- for (i in 1:10) {
if (i %% 3 == 0) {
return(i)
} else if (i %% 5 == 0){
return(i)
}
}
a
for (i in 1:10) {
if (i %% 3 == 0) {
return(i)
} else if (i %% 5 == 0){
return(i)
}
}
for (i in 1:10) {
if (i %% 3|5 == 0) {
print(i)
}
}
?val
x <- c(2,5,3,9,8,11,6)
count <- 0
if (i %% 2 == 0) count = count + 1
print(count)
x <- c(2,5,3,9,8,11,6)
count <- 0
for (i in x) {
if (i %% 2 == 0) count = count + 1
}
print(count)
n <- 10
for (i in 1:n) {
if (i %% 3 == 0) {
return(i)
} else if (i %% 5 == 0) {
return(i)
}
}
for (i in 1:n) {
if (i %% 3 == 0) {
print(i)
} else if (i %% 5 == 0) {
print(i)
}
}
n <- 10
out <- vector("list", length(n))
for (i in 1:n) {
if (i %% 3 == 0) {
print(i)
} else if (i %% 5 == 0) {
print(i)
}
out[[i]] <- i
}
i
n <- 10
out <- 0
for (i in 1:n) {
if (i %% 3 == 0) {
out = out
} else if (i %% 5 == 0) {
out = out
}
}
print(out)
for (i in 1:n) {
if (i %% 3 == 0) {
out <- i
} else if (i %% 5 == 0) {
out <- i
}
}
print(out)
for (i in 1:n) {
if (i %% 3 == 0) {
print(i)
} else if (i %% 5 == 0) {
out <- i
}
}
print(out)
n <- 10
out <- 0
for (i in 1:n) {
if (i %% 3 == 0) {
out <- i
} else if (i %% 5 == 0) {
out <- i
} else {
print("nothin")
}
}
print(out)
n <- 10
for (i in 1:n) {
if (i %% 3 == 0) {
print(i)
} else if (i %% 5 == 0) {
print(i)
} else {
print("nothing")
}
}
for (i in 1:n) {
if (i %% 3 == 0) {
print(i)
} else if (i %% 5 == 0) {
print(i)
}
}
n <- 10
out <- 0
for (i in 1:n) {
if (i %% 3 == 0) {
out <- out + 1
} else if (i %% 5 == 0) {
}
}
print(out)
out <- 0
for (i in 1:n) {
if (i %% 3 == 0) {
out <- out + 1
} else if (i %% 5 == 0) {
} out <- out + 1
}
print(out)
for (i in 1:n) {
if (i %% 3 == 0) {
out <- out + 1
} else if (i %% 5 == 0) {
out <- out + 1
}
}
print(out)
n <- 10
out <- 0
for (i in 1:n) {
if (i %% 3 == 0) {
out <- out + i
} else if (i %% 5 == 0) {
out <- out + i
}
}
print(out)
n <- 10
out <- 0
for (i in 1:n) {
if (i %% 3 == 0) {
out <- out + i
} else if (i %% 5 == 0) {
out <- out + i
}
}
print(out)
n <- 10
out <- 0
for (i in 1:n) {
if (i %% 3 == 0) {
out <- out + i
} else if (i %% 5 == 0) {
}
}
print(out)
n <- 9
out <- 0
for (i in 1:n) {
if (i %% 3 == 0) {
out <- out + i
} else if (i %% 5 == 0) {
}
}
print(out)
out <- out + i
out <- 0
for (i in 1:n) {
if (i %% 3 == 0) {
out <- out + i
} else if (i %% 5 == 0) {
out <- out + i
}
}
print(out)
n <- 999
out <- 0
for (i in 1:n) {
if (i %% 3 == 0) {
out <- out + i
} else if (i %% 5 == 0) {
out <- out + i
}
}
print(out)
library(tidyverse)
mpg
ggplot(mpg, aes(hwy, displ)) +
geom_point()
?numeric
numeric(length = 0)
len <- 10
len
sapply(len, class)
fib <- len
fib
sapply(fib, class)
fib[2] <- 1
fib[1] <- 1
for (i in 3:len) {
fib[i] <- fib[i-1] + fib[i-2]
}
fib
library(rbenchmark)
benchmark(for (i in 3:len) {
fib[i] <- fib[i-1] + fib[i-2]
})
fib_even <- fib %% 2 = 0
fib_even <- (fib %% 2 = 0)
for (i in 1:fib) {
if (i %% 2 = 0) {
fib <- fib + i
}
}
for (i in 1:fib) {
if (i %% 2 = 0) {
fib <- fib + i
} else{
return(NULL)
}
}
for (i in 1:fib) {
if (i %% 2 = 0) {
fib <- fib + i
}
}
for (i in 1:fib) {
if (i %% 2 == 0) {
fib <- fib + i
}
}
print(fib)
library(tidyverse)
setwd("D:/Documents/College/4th Year/Internships/Water Quality/Logger Data/180418 Logger Data/Conductivity")
con <- read.csv("180418_Conductivity.csv", header = F)
con <- con[3:1242,]
colnames(con) <- c("#", "date_time", "high_range", "temp")
y = as.POSIXlt(strptime(con$date, format = "%m/%d/%y %I:%M:%S %p"))
x = data.frame(con, newtime = y)
View(x)
x$high_range <- as.numeric(levels(x$high_range)[x$high_range])
x$temp <- as.numeric(levels(x$temp)[x$temp])
sapply(x, class)
ggplot(x, aes(newtime, temp)) +
geom_line(na.rm = T) +
scale_y_continuous(name = "Temperature (c)", breaks = seq(14, 28, 2)) +
scale_x_datetime(name = "Date", date_breaks = "2 day", date_labels = "%b %d")
temp.factor <- as.numeric(levels(x$temp))[x$temp]
temp.factor
sapply(temp.factor, class)
bay <- select(x, temp)
View(bay)
temp_ts <- ts(temp.factor, frequency = 96, start = 2018)
temp_ts
plot.ts(temp_ts)
ggplot(x, aes(newtime, temp)) +
geom_line(na.rm = T) +
scale_y_continuous(name = "Temperature (c)", breaks = seq(14, 28, 2)) +
scale_x_datetime(name = "Date", date_breaks = "2 day", date_labels = "%b %d")

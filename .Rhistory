geom_line() +
xlab('Date') +
ylab('Level (m)') +
ggtitle('Water level (m) over time')
lv_diff96 <- diff(lv_zoo$level, 96)
plot(lv_diff96, type='l')
lv_diff <- diff(lv_zoo$level)
plot(lv_diff, type='l')
ggAcf(lv_diff, lag.max = 200)
ggPacf(lv_diff)
lv_diff96 <- diff(lv_zoo$level, 96)
plot(lv_diff96, type='l')
ggAcf(lv_diff96, lag.max = 200)
ggPacf(lv_diff96)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
library(chron)
library(zoo)
library(xts)
library(tseries)
library(forecast)
here()
lv <- read_csv('180301 Level Data.csv')
lv$date_time <- as.POSIXct(lv$date_time, format = '%m/%d/%y %H:%M')
lv_zoo <- zoo(lv$level_m, order.by = lv$date_time)
str(lv_zoo)
lv_zoo <- data.frame(lv_zoo)
lv_zoo <- lv_zoo %>%
rename(level = lv_zoo) %>%
mutate(plot_time = as.POSIXct(rownames(lv_zoo), format = "%Y-%m-%d %H:%M:%S"))
lv_zoo <- lv_zoo %>% select(plot_time, level)
head(lv_zoo)
ggplot(lv_zoo, aes(plot_time, level)) +
geom_line() +
xlab('Date') +
ylab('Level (m)') +
ggtitle('Water level (m) over time')
lv_diff96 <- diff(lv_zoo$level, 96)
plot(lv_diff96, type='l')
ggAcf(lv_diff96, lag.max = 200)
ggPacf(lv_diff96)
lv_diff <- diff(lv_zoo$level)
plot(lv_diff, type='l')
ggAcf(lv_diff, lag.max = 200)
ggPacf(lv_diff)
ggAcf(diff(lv_dif96))
ggAcf(diff(lv_diff96))
ggAcf(lv_diff)
lv_diff96 <- diff(lv_zoo$level, 96)
plot(lv_diff96, type='l')
ggAcf(lv_diff96, lag.max = 200)
ggPacf(lv_diff96)
ggAcf(diff(lv_diff96))
lv_diff96 <- diff(lv_zoo$level, 96)
plot(lv_diff96, type='l')
ggAcf(lv_diff96, lag.max = 200)
ggPacf(lv_diff96)
plot(diff(lv_diff96))
ggAcf(diff(lv_diff96))
plot(diff(lv_diff96), type='l')
lv_diff <- diff(lv_zoo$level)
plot(lv_diff, type='l')
ggAcf(lv_diff)
ggPacf(lv_diff)
plot(diff(lv_diff96), type='l')
ggAcf(diff(lv_diff96))
plot(diff(diff(lv_diff96)), type='l')
ggAcf(diff(lv_diff96), lagmax=200)
ggAcf(diff(lv_diff96), lagmax=200)
ggAcf(diff(lv_diff96), lag.max=200)
lv_ts <- ts(lv, frequency=96)
head(lv)
plot(lv_ts$level_m)
lv_ts
plot(lv_ts)
decomp <- stl(lv_ts, s.window='periodic')
test1 <- lv[c(2, 5)]
lv_ts <- ts(test1, frequency=96)
decomp <- stl(lv_ts, s.window='periodic')
seasadj(decomp)
decomp <- stl(lv_ts, s.window='periodic')
head(test1)
adf.test(lv_zoo, alternative='stationary')
?adf.test
lv_zoo <- zoo(lv$level_m, order.by = lv$date_time)
dtype(lv_zoo)
str(lv_zoo)
adf.test(lv_zoo, alternative='stationary')
lv_zoo <- zoo(lv$level_m, order.by = lv$date_time)
str(lv_zoo)
df_lv_zoo <- data.frame(lv_zoo)
df_lv_zoo <- df_lv_zoo %>%
rename(level = df_lv_zoo) %>%
mutate(plot_time = as.POSIXct(rownames(df_lv_zoo), format = "%Y-%m-%d %H:%M:%S"))
head(df_lv_zoo)
df_lv_zoo <- data.frame(lv_zoo)
df_lv_zoo
df_lv_zoo <- df_lv_zoo %>%
rename(level = lv_zoo) %>%
mutate(plot_time = as.POSIXct(rownames(df_lv_zoo), format = "%Y-%m-%d %H:%M:%S"))
adf.test(lv_diff96, alternative='stationary')
raw <- adf.test(lv_zoo, alternative='stationary')
raw
adf.test(lv_diff96, alternative='stationary')
adj
raw <- adf.test(lv_zoo, alternative='stationary')
raw
adj <- adf.test(lv_diff96, alternative='stationary')
adj
plot(lv_zoo)
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
here()
data <- read_csv('Tractor_Sales.csv')
data <- read_csv('Tractor-Sales.csv')
head(data)
data <- read_csv('Tractor-Sales.csv')
data_ts <- ts(data[,2], start=c(2003, 1), frequency=12)
heada(data)
head(data)
View(data)
plot(data_ts)
str(data_ts)
head(data_ts)
plot(diff(data_ts))
plot(log10(data_ts))
st_data_ts <- log10(diff(data_ts))
st_data_ts <- diff(log10(data_ts))
plot(st_data_ts)
adf.test(st_data_ts, alternative='stationary')
acf(st_data_ts)
par(mfrow=c(1,2))
par(mfrow=c(1,2))
acf(st_data_ts)
pacf(st_data_ts)
par(mfrow=c(1,2))
acf(st_data_ts)
pacf(st_data_ts)
par(mfrow=c(1,2))
acf(st_data_ts, main='ACF')
pacf(st_data_ts, main='PACF')
st_data_ts <- ts(diff(log10(data)))
st_data_ts <- ts(diff(log10(data)))
acf(ts(diff(log10(data))), main='ACF')
data <- read_csv('Tractor-Sales.csv')
acf(ts(diff(log10(data_ts))), main='ACF')
acf(ts(st_data_ts), main='ACF')
par(mfrow=c(1,2))
acf(ts(st_data_ts), main='ACF')
pacf(ts(st_data_ts), main='PACF')
library(forecast)
arima_fit <- auto.arima(log10(data_ts), approximation=FALSE, trace=FALSE)
arima_fit
summary(arima_fit)
pred <- predict(arima_fit, n.ahead=36)
pred
head(data)
log10(141)
plot(data_ts, type='l')
pred <- predict(arima_fit, n.ahead=36)
pred
plot(data_ts, type='l')
lines(10^(pred$pred), col='blue')
pred <- predict(arima_fit, n.ahead=36)
# pred
plot(data_ts, type='l')
lines(10^(pred$pred), col='blue')
lines(10^(pred$pred + 2*pred$se), col='orange')
lines(10^(pred$pred - 2**pred$se), col='orange')
pred <- predict(arima_fit, n.ahead=36)
# pred
plot(data_ts, type='l')
lines(10^(pred$pred), col='blue')
lines(10^(pred$pred + 2*pred$se), col='orange')
lines(10^(pred$pred - 2*pred$se), col='orange')
plot(data_ts, type='l', xlim=c(2004, 2018))
pred <- predict(arima_fit, n.ahead=36)
# pred
plot(data_ts, type='l', xlim=c(2004, 2018))
lines(10^(pred$pred), col='blue')
lines(10^(pred$pred + 2*pred$se), col='orange')
lines(10^(pred$pred - 2*pred$se), col='orange')
pred <- predict(arima_fit, n.ahead=36)
# pred
plot(data_ts, type='l', xlim=c(2004, 2018), ylim=c(0, 1600))
lines(10^(pred$pred), col='blue')
lines(10^(pred$pred + 2*pred$se), col='orange')
lines(10^(pred$pred - 2*pred$se), col='orange')
arima_fit$residuals
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
library(chron)
library(zoo)
library(xts)
library(tseries)
library(forecast)
library(tidyverse)
library(here)
library(zoo)
library(xts)
library(tseries)
library(forecast)
here()
lv <- read_csv('180301 Level Data.csv')
lv$date_time <- as.POSIXct(lv$date_time, format = '%m/%d/%y %H:%M')
library(tidyverse)
library(here)
library(zoo)
library(tseries)
library(forecast)
here()
lv <- read_csv('180301 Level Data.csv')
lv$date_time <- as.POSIXct(lv$date_time, format = '%m/%d/%y %H:%M')
lv_zoo <- zoo(lv$level_m, order.by = lv$date_time)
str(lv_zoo)
df_lv_zoo <- data.frame(lv_zoo)
df_lv_zoo <- df_lv_zoo %>%
rename(level = lv_zoo) %>%
mutate(plot_time = as.POSIXct(rownames(df_lv_zoo), format = "%Y-%m-%d %H:%M:%S"))
df_lv_zoo <- df_lv_zoo %>% select(plot_time, level)
head(df_lv_zoo)
ggplot(df_lv_zoo, aes(plot_time, level)) +
geom_line() +
xlab('Date') +
ylab('Level (m)') +
ggtitle('Water level (m) over time')
lv_diff96 <- diff(df_lv_zoo$level, 96)
plot(lv_diff96, type='l')
ggAcf(lv_diff96, lag.max = 200)
ggPacf(lv_diff96)
plot(diff(lv_diff96), type='l')
ggAcf(diff(lv_diff96), lag.max=200)
lv_diff <- diff(df_lv_zoo$level)
plot(lv_diff, type='l')
ggAcf(lv_diff)
ggPacf(lv_diff)
raw <- adf.test(lv_zoo, alternative='stationary')
raw
adj <- adf.test(lv_diff96, alternative='stationary')
adj
Box.test(lv_diff, lag=10, type='Ljung-Box')
checkresiduals(naive(lv_zoo$level))
ggAcf(lv$level_m, lag.max=200)
ggAcf(lv$level_m, lag.max=100)
head(lv_zoo)
hed(lv_diff)
head(lv_diff)
head(lv_diff96)
plot(lv_zoo)
gghistogram(lv_diff)
gghistogram(lv_diff96)
gghistogram(lv_diff)
kpss.test(lv_zoo)
kpss.test(lv_diff96)
kpss.test(lv_zoo)
kpss.test(lv_diff96)
kpss.test(lv_diff)
kpss.test(lv_diff96)
kpss.test(lv_diff)
kpss.test(lv_zoo)
kpss.test(lv_diff)
kpss.test(lv_diff96)
raw <- adf.test(lv_zoo, alternative='stationary')
raw
adj.test(lv_diff, alternative='stationary')
raw <- adf.test(lv_zoo, alternative='stationary')
raw
adf.test(lv_diff, alternative='stationary')
adj <- adf.test(lv_diff96, alternative='stationary')
adj
ggplot(df_lv_zoo, aes(plot_time, log(level))) +
geom_line() +
xlab('Date') +
ylab('Level (m)') +
ggtitle('Water level (m) over time')
model_diff <- auto.arima(lv_diff, approximation=FALSE, trace=FALSE)
summary(model_diff)
pred <- predict(model_diff, n.ahead=96)
# pred
plot(data_ts, type='l')
pred <- predict(model_diff, n.ahead=96)
# pred
plot(lv_diff, type='l')
lines(10^(pred$pred), col='blue')
lines(10^(pred$pred + 2*pred$se), col='orange')
lines(10^(pred$pred - 2*pred$se), col='orange')
pred <- predict(model_diff, n.ahead=96)
# pred
plot(lv_zoo, type='l')
lines(10^(pred$pred), col='blue')
lines(10^(pred$pred + 2*pred$se), col='orange')
lines(10^(pred$pred - 2*pred$se), col='orange')
head(lv_zoo)
tail(lv_zoo)
pred <- predict(model_diff, n.ahead=96)
# pred
plot(lv_zoo, type='l', xlim=c(2018-02-12, 2018-03-05))
lines(10^(pred$pred), col='blue')
lines(10^(pred$pred + 2*pred$se), col='orange')
lines(10^(pred$pred - 2*pred$se), col='orange')
pred <- predict(model_diff, n.ahead=96)
# pred
plot(lv_zoo, type='l', xlim=c('2018-02-12', '2018-03-05'))
pred <- predict(model_diff, n.ahead=96)
# pred
plot(lv_zoo, type='l', xlim=c(2018-02-12 12:00:00, 2018-03-05 12:00:00))
pred <- predict(model_diff, n.ahead=96)
# pred
plot(lv_zoo, type='l', xlim=c('2018-02-12 12:00:00', '2018-03-05 12:00:00'))
pred
pred <- predict(model_diff, n.ahead=96)
pred
plot(lv_zoo, type='l', xlim=c('2018-02-12 12:00:00', '2018-03-05 12:00:00'))
knitr::opts_chunk$set(echo = TRUE)
here()
data <- read_csv('Tractor-Sales.csv')
data_ts <- ts(data[,2], start=c(2003, 1), frequency=12)
plot(data_ts)
head(data)
pred <- predict(model_diff, n.ahead=96)
# pred
plot(df_lv_zoo, type='l', xlim=c('2018-02-12 12:00:00', '2018-03-05 12:00:00'))
head(df_lv_zoo)
plot(df_lv_zoo, type='l', xlim=c(2018-02-12, 2018-03-05))
plot(df_lv_zoo)
pred <- predict(model_diff, n.ahead=96)
# pred
plot(df_lv_zoo, type='l')
lines(pred$pred, col='blue')
lines(pred$pred + 2*pred$se, col='orange')
lines(pred$pred - 2*pred$se, col='orange')
pred <- predict(model_diff, n.ahead=96)
# pred
plot(df_lv_zoo, type='l', xlim=c(0, 200))
lines(pred$pred, col='blue')
lines(pred$pred + 2*pred$se, col='orange')
lines(pred$pred - 2*pred$se, col='orange')
pred <- predict(model_diff, n.ahead=96)
# pred
plot(df_lv_zoo, type='l', xlim=c(0, 20000000))
lines(pred$pred, col='blue')
lines(pred$pred + 2*pred$se, col='orange')
lines(pred$pred - 2*pred$se, col='orange')
pred <- predict(model_diff, n.ahead=96)
# pred
plot(df_lv_zoo, type='l', xlim=c(0, 2000))
lines(pred$pred, col='blue')
lines(pred$pred + 2*pred$se, col='orange')
lines(pred$pred - 2*pred$se, col='orange')
pred <- predict(model_diff, n.ahead=96)
# pred
plot(df_lv_zoo, type='l', xlim=c(0))
pred <- predict(model_diff, n.ahead=96)
# pred
plot(df_lv_zoo, type='l', xlim=c(2018))
pred <- predict(model_diff, n.ahead=96)
# pred
plot(df_lv_zoo, type='l', xlim=c(2018, 2019))
lines(pred$pred, col='blue')
lines(pred$pred + 2*pred$se, col='orange')
lines(pred$pred - 2*pred$se, col='orange')
pred
checkresiduals(model_diff)
autoplot(forecast(model_diff))
head(lv_diff)
head(lv_zoo)
own_model <- Arima(lv_zoo, order=c(1,1,4))
checkresiduals(own_model)
autoplot(forecast(own_model))
?forecast
pred_own <- predict(own_model, n.ahead=400)
pred_own
pred_own <- predict(own_model, n.ahead=400)
# pred_own
plot(lv_zoo, type='l')
lines(pred_own$pred, col='blue')
pred_own
autoplot(forecast(own_model, h=4))
autoplot(forecast(own_model, h=400))
autoplot(forecast(own_model, h=100))
autoplot(forecast(own_model, h=1000))
ggplot(df_lv_zoo, aes(plot_time, level)) +
geom_line() +
geom_smooth(method = 'loess', se = FALSE) +
xlab('Date') +
ylab('Level (m)') +
ggtitle('Water level (m) over time')
knitr::opts_chunk$set(echo = TRUE)
cat('Absolute difference in water level over the period of', as.character(start(lv_zoo)), 'and', as.character(end(lv_zoo)), 'in meters:', max(lv_zoo) - min(lv_zoo))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
library(zoo)
library(tseries)
library(forecast)
here()
lv <- read_csv('data/180301 Level Data.csv')
lv$date_time <- as.POSIXct(lv$date_time, format = '%m/%d/%y %H:%M')
lv_zoo <- zoo(lv$level_m, order.by = lv$date_time)
str(lv_zoo)
cat('Absolute difference in water level over the period of', as.character(start(lv_zoo)), 'and', as.character(end(lv_zoo)), 'in meters:', max(lv_zoo) - min(lv_zoo))
lv$date_time <- as.POSIXct(lv$date_time, format = '%m/%d/%y %H:%M')
lv_zoo <- zoo(lv$level_m, order.by = lv$date_time)
str(lv_zoo)
cat('\nAbsolute difference in water level over the period of', as.character(start(lv_zoo)), 'and', as.character(end(lv_zoo)), 'in meters:', max(lv_zoo) - min(lv_zoo))
df_lv_zoo <- data.frame(lv_zoo)
df_lv_zoo <- df_lv_zoo %>%
rename(level = lv_zoo) %>%
mutate(plot_time = as.POSIXct(rownames(df_lv_zoo), format = "%Y-%m-%d %H:%M:%S"))
df_lv_zoo <- df_lv_zoo %>% select(plot_time, level)
head(df_lv_zoo)
ggplot(df_lv_zoo, aes(plot_time, level)) +
geom_line() +
xlab('Date') +
ylab('Level (m)') +
ggtitle('Water level (m) over time')
ggAcf(lv$level_m, lag.max=100)
test1 <- ts(lv, frequency = 96)
plot(test1)
decompose(test1)
head(lv)
test1 <- lv[c(2,5)]
test1 <- ts(lv, frequency = 96)
plot(test1)
test1 <- lv[,c(2,5)]
head(test1)
test1 <- ts(lv, frequency = 96)
test1 <- ts(test1, frequency = 96)
plot(test1)
test1 <- lv[,c(2,5)]
test1 <- ts(test1, frequency = 96)
plot(test1)
decompose(test1)
plot(test1)
head(test1)
test1 <- ts(test1$level_m, frequency = 96)
test1 <- lv[,c(2,5)]
test1 <- ts(test1$level_m, frequency = 96)
plot(test1)
seasonplot(test1)
test1 <- lv[,c(2,5)]
test1 <- ts(test1$level_m, frequency = 96)
plot(test1)
seasonplot(test1)
seasonplot(test1, type='l')
test1 <- lv[,c(2,5)]
test1 <- ts(test1$level_m, frequency = 96)
plot(test1)
monthplot(test1, choice='seasonal')
seasonplot(test1, type='l')
test1 <- lv[,c(2,5)]
test1 <- ts(test1$level_m, frequency = 96)
test2 <- stl(test1, s.window='period')
plot(test2)
library(tidyverse)
library(here)
library(zoo)
library(tseries)
library(forecast)
here()
lv <- read_csv('180301 Level Data.csv')
here()
lv <- read_csv('data/180301 Level Data.csv')
here()
lv <- read_csv('data/180301 Level Data.csv')
library(tidyverse)
library(here)
library(zoo)
library(tseries)
library(forecast)
here()
lv <- read_csv('data/180301 Level Data.csv')
here()
lv <- read_csv('data/180301 Level Data.csv')
here()
lv <- read_csv('180301 Level Data.csv')
here()
lv <- read_csv('180301 Level Data.csv')
lv <- read_csv('180301 Level Data copy.csv')
here()
lv <- read_csv('180301 Level Data copy.csv')
here()
lv <- read_csv('180301 Level Datacopy.csv')
here()
lv <- read_csv('180301 Level Data copy.csv')
lv$date_time <- as.POSIXct(lv$date_time, format = '%m/%d/%y %H:%M')
lv_zoo <- zoo(lv$level_m, order.by = lv$date_time)
str(lv_zoo)
df_lv_zoo <- data.frame(lv_zoo)
df_lv_zoo <- df_lv_zoo %>%
rename(level = lv_zoo) %>%
mutate(plot_time = as.POSIXct(rownames(df_lv_zoo), format = "%Y-%m-%d %H:%M:%S"))
df_lv_zoo <- df_lv_zoo %>% select(plot_time, level)
head(df_lv_zoo)
ggplot(df_lv_zoo, aes(plot_time, level)) +
geom_line() +
xlab('Date') +
ylab('Level (m)') +
ggtitle('Water level (m) over time')
head(lv_zoo)
head(df_lv_zoo)
testzoo <- stl(lv_zoo, s.window='period')
testzoo <- decompose(lv_zoo, s.window='period')
testzoo <- stl(lv_zoo, s.window='period')
testzoo <- stl(lv_zoo)
test1 <- ts(lv_zoo$level, frequency = 96)
test1 <- ts(df_lv_zoo$level, frequency = 96)
testzoo <- stl(test1, s.window='period')
plot(testzoo)

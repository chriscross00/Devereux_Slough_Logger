max(lv_df$level_m)
lv_df <- lv[c(2,5)]
cat('Absolute difference in water level over the period of', as.character(start(lv_zoo)), 'and', as.character(end(lv_zoo)), 'in meters:', max(lv_df$level_m) - min(lv_df$level_m))
ggplot(lv_df, aes(date_time, level_m)) +
geom_line() +
xlab('Date') +
ylab('Level (m)') +
ggtitle('Water level (m) over time')
ggplot(lv_df, aes(date_time, level_m)) +
geom_line() +
geom_smooth(method = 'loess', se = FALSE) +
xlab('Date') +
ylab('Level (m)') +
ggtitle('Water level (m) over time w/ trend line')
ts <- ts(lv_df$level_m, frequency = 96)
decomp_ts <- stl(ts, s.window='period')
plot(decomp_ts)
grid.arrange(ggAcf(lv_zoo), ggPacf(lv_zoo), nrow=2)
lv_zoo %>%
diff(lag=96) %>%
ggtsdisplay(xlab='Sample',
main='Seasonal differenced water level')
lv_diff <- lv_zoo %>%
diff(lag=96) %>%
diff() %>%
ggtsdisplay(xlab='Sample',
main='Seasonally differenced diff(1) water level')
plot(lv_diff, type='l')
ggAcf(lv_diff, lag.max = 200)
ggAcf(lv_diff, lag.max = 200)
head(lv_diff)
lv_diff <- lv_zoo %>%
diff(lag=96) %>%
diff()
ggtsdisplay(lv_diff, xlab='Sample',
main='Seasonally differenced diff(1) water level')
plot(lv_diff, type='l')
ggAcf(lv_diff, lag.max = 200)
ggPacf(lv_diff)
model_diff <- auto.arima(lv_diff, approximation=FALSE, trace=FALSE)
model_diff <- auto.arima(lv_diff, approximation=FALSE, trace=FALSE)
summary(model_diff)
checkresiduals(model_diff)
checkresiduals(own_model)
autoplot(forecast(model_diff))
lv_zoo %>%
Arima(order=c(2,1,3), seasonal=c(0,1,1)) %>%
forecast() %>%
autoplot()
lv_zoo %>%
Arima(order=c(2,1,3), seasonal=c(0,1,1), lambda=0) %>%
forecast() %>%
autoplot()
?forecast
lv_zoo %>%
Arima(order=c(2,1,3), seasonal=c(0,1,1), lambda=0) %>%
forecast(h=1000) %>%
autoplot()
lv_zoo %>%
Arima(order=c(2,1,3), seasonal=c(0,1,0), lambda=0) %>%
forecast(h=1000) %>%
autoplot()
lv_zoo %>%
Arima(order=c(2,1,3), seasonal=c(0,1,0), lambda=0) %>%
forecast(h=100) %>%
autoplot()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(gridExtra)
library(here)
library(zoo)
library(tseries)
library(forecast)
here()
lv <- read_csv('180301 Level Data copy.csv')
lv$date_time <- as.POSIXct(lv$date_time, format = '%m/%d/%y %H:%M')
lv_zoo <- zoo(lv$level_m, order.by = lv$date_time)
str(lv_zoo)
lv_df <- lv[c(2,5)]
cat('Absolute difference in water level over the period of', as.character(start(lv_zoo)), 'and', as.character(end(lv_zoo)), 'in meters:', max(lv_df$level_m) - min(lv_df$level_m))
model_diff <- auto.arima(lv_diff, approximation=FALSE, trace=FALSE)
lv_diff <- lv_zoo %>%
diff(lag=96) %>%
diff()
ggtsdisplay(lv_diff, xlab='Sample',
main='Seasonally differenced diff(1) water level')
model_diff <- auto.arima(lv_diff, approximation=FALSE, trace=FALSE)
summary(model_diff)
checkresiduals(model_diff)
autoplot(forecast(model_diff))
checkresiduals(model_diff)
autoplot(forecast(model_diff, h=1000))
lv_zoo %>%
Arima(order=c(2,1,3), seasonal=c(0,1,1), lambda=0) %>%
forecast(h=1000) %>%
autoplot()
lv_zoo %>%
Arima(order=c(2,1,3), seasonal=c(4,1,1), lambda=0) %>%
forecast(h=1000) %>%
autoplot()
lv_zoo %>%
Arima(order=c(2,1,3), seasonal=c(0,1,2), lambda=0) %>%
forecast(h=1000) %>%
autoplot()
lv_zoo %>%
Arima(order=c(2,1,3), seasonal=c(0,1,2), lambda=0) %>%
forecast(h=500) %>%
autoplot()
lv_zoo %>%
Arima(order=c(2,0,3), seasonal=c(0,1,2), lambda=0) %>%
forecast(h=500) %>%
autoplot()
lv_zoo %>%
Arima(order=c(2,1,2), seasonal=c(0,1,2), lambda=0) %>%
forecast(h=500) %>%
autoplot()
lv_zoo %>%
Arima(order=c(201,2), seasonal=c(0,1,2), lambda=0) %>%
forecast(h=500) %>%
autoplot()
lv_zoo %>%
Arima(order=c(2,1,2), seasonal=c(0,1,2), lambda=0) %>%
forecast(h=500) %>%
autoplot()
lv_zoo %>%
Arima(order=c(2,1,2), seasonal=c(0,1,2), lambda=96) %>%
forecast(h=500) %>%
autoplot()
lv_zoo %>%
Arima(order=c(2,1,2), seasonal=c(0,1,2)) %>%
forecast(h=500) %>%
autoplot()
lv_diff <- lv_zoo %>%
diff(lag=96)
ggtsdisplay(lv_diff, xlab='Sample',
main='Seasonally differenced diff(1) water level')
model_diff <- auto.arima(lv_diff, approximation=FALSE, trace=FALSE)
summary(model_diff)
checkresiduals(model_diff)
autoplot(forecast(model_diff, h=1000))
lv_zoo %>%
Arima(order=c(2,1,3), seasonal=c(0,1,0)) %>%
forecast(h=500) %>%
autoplot()
knitr::opts_chunk$set(echo = TRUE)
here()
data <- read_csv('Tractor-Sales.csv')
data_ts <- ts(data[,2], start=c(2003, 1), frequency=12)
plot(data_ts)
View(data)
forecast(model_diff, h=50)
head(lv_diff)
?zooreg
here()
lv <- read_csv('180301 Level Data copy.csv')
lv$date_time <- as.POSIXct(lv$date_time, format = '%m/%d/%y %H:%M')
lv_zoo <- zoo(lv$level_m, order.by = lv$date_time)
str(lv_zoo)
lv_ts <- ts(lv$level_m, frequency=96)
plot(lv_ts)
head(lv_ts)
lv_ts <- ts(lv$level_m, start=c(2018, 02, 12), frequency=96)
head(lv_ts)
plot(lv_ts)
lv_ts <- ts(lv$level_m, start=c(2018, 02, 12, 12, 00, 00), frequency=96)
head(lv_ts)
plot(lv_ts)
lv_ts <- ts(lv$level_m, start=c(2018, 02, 12), frequency=96)
head(lv_ts)
plot(lv_ts)
head(lv_ts)
tail(lv)
length(lv_ts)
24*15
24*4
lv_ts <- ts(lv$level_m, start=c(2018, 02, 12), frequency=96)
head(lv_ts)
plot(lv_ts)
auto.arima(lv_ts, approximation=FALSE, trace=FALSE)
2+@
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(gridExtra)
library(here)
library(zoo)
library(tseries)
library(forecast)
here()
lv <- read_csv('180301 Level Data copy.csv')
lv$date_time <- as.POSIXct(lv$date_time, format = '%m/%d/%y %H:%M')
lv_zoo <- zoo(lv$level_m, order.by = lv$date_time)
str(lv_zoo)
lv_ts <- ts(lv$level_m, start=c(02, 12), frequency=96)
head(lv_ts)
plot(lv_ts)
# AR(4)
test4 <- arima(lv_ts, order=c(4,1,0))
test4_pred <- predict(test4, n.ahead=200)
plot(lv_ts)
lines(test4_pred$pred, col='blue')
# AR(4)
test4 <- arima(lv_ts, order=c(4,1,0))
test4_pred <- predict(test4, n.ahead=700)
plot(lv_ts)
lines(test4_pred$pred, col='blue')
# AR(4)
test4 <- arima(lv_ts, order=c(4,1,0))
test4_pred <- predict(test4, n.ahead=1)
plot(lv_ts)
lines(test4_pred$pred, col='blue')
# AR(4)
test4 <- arima(lv_ts, order=c(4,1,0))
test4_pred <- predict(test4, n.ahead=2000)
plot(lv_ts)
lines(test4_pred$pred, col='blue')
auto.arima(lv_ts, seasonal=T)
print(ts(lv$level_m, start=c(02, 12), frequency=365.25), calendar=T)
print(ts(lv$level_m, start=c(2018, 02, 12), frequency=365.25), calendar=T)
lv_ts <- ts(lv$level_m, frequency=365.25)
lv_ts <- ts(lv$level_m, frequency=365.25)
head(lv_ts)
plot(lv_ts)
lv_ts <- ts(lv$level_m, frequency=96)
head(lv_ts)
plot(lv_ts)
head(lv)
tail(lv)
lv_ts <- ts(lv$level_m, frequency=12)
head(lv_ts)
plot(lv_ts)
auto.arima(lv_ts, seasonal=T)
knitr::opts_chunk$set(echo = TRUE)
library(forecast)
y <- ts(rnorm(n) + (1:n)%%100/30, f=m)
n <- 2000
m <- 200
y <- ts(rnorm(n) + (1:n)%%100/30, f=m)
?Arima
fit <- Arima(y, order=c(2,0,1), xreg=fourier(y, K=4))
plot(fit)
plot(forecast(fit, h=2*m, xreg=fourier(y, K=4, h=2*m)))
plot(y)
plot(forecast(fit, h=2*m, xreg=fourier(y, K=4, h=2*m)))
predict(fit, n.ahead=200)
predict(fit, n.ahead=200)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(gridExtra)
library(here)
library(zoo)
library(tseries)
library(forecast)
here()
lv <- read_csv('180301 Level Data copy.csv')
lv$date_time <- as.POSIXct(lv$date_time, format = '%m/%d/%y %H:%M')
test1_diff <- diff(lv_ts_wk, lag=96)
here()
lv <- read_csv('180301 Level Data copy.csv')
lv$date_time <- as.POSIXct(lv$date_time, format = '%m/%d/%y %H:%M')
test1_diff <- diff(lv_ts_wk, lag=96)
lv_ts_wk <- msts(lv$level_m, seasonal.periods=c(96,35064))
test1_diff <- diff(lv_ts_wk, lag=96)
lv_ts_wk %>% adf.test(k=96)
test1_diff %>% adf.test(k=96)
auto_fit <- auto.arima(lv_ts_wk, seasonal=FALSE, xreg=fourier(lv_ts_wk, K=c(4,1)))
auto_fit
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
library(forecast)
here()
lv <- read_csv('data/180301 Level Data.csv')
library(tidyverse)
library(here)
library(zoo)
library(forecast)
lv$date_time <- as.POSIXct(lv$date_time, format = '%m/%d/%y %H:%M')
lv_zoo <- zoo(lv$level_m, order.by = lv$date_time)
str(lv_zoo)
cat('\nAbsolute difference in water level over the period of', as.character(start(lv_zoo)), 'and', as.character(end(lv_zoo)), 'in meters:', max(lv_zoo) - min(lv_zoo))
min(lv$level_m)
knitr::opts_chunk$set(echo = TRUE)
lv_df <- lv[c(2,5)]
lv_df
lv_df <- lv[c(2,5)]
lv_df
dim(lv_df)
head(lv)
?head
head(lv, n=4)
head(lv, n=5)
decomp_ts <- stl(lv_ts_wk, s.window='period')
ts <- ts(lv_df$level_m, frequency = 96)
decomp_ts <- stl(ts, s.window='period')
plot(decomp_ts)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
library(forecast)
here()
lv <- read_csv('data/180301 Level Data.csv')
head(lv, n=5)
lv$date_time <- as.POSIXct(lv$date_time, format = '%m/%d/%y %H:%M')
lv_df <- lv[c(2,5)]
cat('\nAbsolute difference in water level over the period of', as.character(start(lv_zoo)), 'and', as.character(end(lv_zoo)), 'in meters:', max(lv_df$level_m) - min(lv_df$level_m))
?end
start(lv)
lv
start(lv$date_time)
start(lv_df)
min(lv_df$date_time)
end(lv_df$date_time)
autoplot(lv_df)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(gridExtra)
library(here)
library(forecast)
here()
lv <- read_csv('180301 Level Data copy.csv')
lv$date_time <- as.POSIXct(lv$date_time, format = '%m/%d/%y %H:%M')
lv_ts_wk <- msts(lv$level_m, seasonal.periods=c(96,35064))
plot(lv_ts_wk)
autoplot(lv_ts_wk)
lv$date_time <- as.POSIXct(lv$date_time, format = '%m/%d/%y %H:%M')
lv_df <- lv[c(2,5)]
cat('\nAbsolute difference in water level over the period of', as.character(min(lv_df$date_time)), 'and', as.character(min(lv_df$date_time)), 'in meters:', max(lv_df$level_m) - min(lv_df$level_m))
lv$date_time <- as.POSIXct(lv$date_time, format = '%m/%d/%y %H:%M')
lv_df <- lv[c(2,5)]
cat('\nAbsolute difference in water level over the period of', as.character(min(lv_df$date_time)), 'and', min(lv_df$date_time), 'in meters:', max(lv_df$level_m) - min(lv_df$level_m))
lv$date_time <- as.POSIXct(lv$date_time, format = '%m/%d/%y %H:%M')
lv_df <- lv[c(2,5)]
cat('\nAbsolute difference in water level over the period of', as.character(min(lv_df$date_time)), 'and', as.character(min(lv_df$date_time)), 'in meters:', max(lv_df$level_m) - min(lv_df$level_m))
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
library(tseries)
library(forecast)
air <- AirPassengers
head(air)
library(fpp2)
air <- AirPassengers
head(air)
lv_df
lv_df$date <- as.Date(lv_dfdate_time)
lv_df$date <- as.Date(lv_df$date_time)
head(lv_df)
lv_df$time <- format(as.POSIXct(lv_df$date_time), format="%H:%M")
head(lv_df)
lv_df <- lv_df[,2:4]
head(lv_df)
test_ts <- ts(lv_df['level_m'], start=c(2018, 02, 12), frequency=96)
test_ts
plot(test_ts)
test_ts <- ts(lv_df['level_m'], start=c(02, 12), frequency=96)
head(test_ts)
tail(lv)
plot(test_ts)
head(test_ts)
plot(test_ts)
head(lv_df)
lv_df$date <- as.Date(lv_df$date_time)
here()
lv <- read_csv('180301 Level Data copy.csv')
lv$date_time <- as.POSIXct(lv$date_time, format = '%m/%d/%y %H:%M')
lv_df$date <- as.Date(lv_df$date_time)
lv_df$date <- as.Date(lv_df$date_time)
here()
lv <- read_csv('180301 Level Data copy.csv')
lv$date_time <- as.POSIXct(lv$date_time, format = '%m/%d/%y %H:%M')
lv_df$date <- as.Date(lv_df$date_time)
lv_df$date <- as.Date(lv$date_time)
lv$date <- as.Date(lv$date_time)
lv$time <- format(lv$date_time, format="%H:%M")
head(lv)
lv_df <- lv[,4:6]
head(lv_df)
head(lv)
lv_df <- lv[,5:7]
head(lv_Df)
head(lv_df)
lv$time <- format(as.POSIXct(lv$date_time), format="%H:%M")
head(lv)
lv_df <- lv[,5:7]
test_ts <- ts(lv_df['level_m'], start=c(02, 12), frequency=96)
head(test_ts)
plot(test_ts)
test_ts <- ts(lv_df['level_m'], start=c(2018-02-12), frequency=96)
head(test_ts)
plot(test_ts)
test_ts <- ts(lv_df['level_m'], start=c(2018), frequency=96)
head(test_ts)
test_ts <- ts(lv_df['level_m'], start=c(2018, 2), frequency=96)
head(test_ts)
test_ts <- ts(lv_df['level_m'], start=c(2018, 2, 12), frequency=96)
head(test_ts)
plot(test_ts)
test_ts <- ts(lv_df['level_m'], start=c(2, 12), frequency=96)
head(test_ts)
plot(test_ts)
head(test_ts)
tail(lv)
test_ts <- ts(lv_df['level_m'], start=c(2, 12), end=c(3, 1), frequency=96)
head(test_ts)
plot(test_ts)
test_ts <- ts(lv_df['level_m'], start=c(2, 12), frequency=96)
head(test_ts)
plot(test_ts)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
library(forecast)
here()
lv <- read_csv('data/180301 Level Data.csv')
head(lv, n=5)
lv$date_time <- as.POSIXct(lv$date_time, format = '%m/%d/%y %H:%M')
lv_df <- lv[c(2,5)]
cat('\nAbsolute difference in water level over the period of', as.character(min(lv_df$date_time)), 'and', as.character(min(lv_df$date_time)), 'in meters:', max(lv_df$level_m) - min(lv_df$level_m))
ggplot(lv_df, aes(date_time, level_m)) +
geom_line() +
geom_smooth(method = 'loess', se = FALSE) +
xlab('Date') +
ylab('Level (m)') +
ggtitle('Water level (m) over time')
ggtsdisplay(lv_df)
ggtsdisplay(lv_df$level_m)
ggtsdisplay(lv_df$level_m) +
ggtitle('ACF and PACF of level')
ggtsdisplay(lv_df$level_m, main='test')
ggtsdisplay(lv_df$level_m, main='ACF and PACF of level')
ggtsdisplay(lv_df$level_m, main='ACF and PACF of level_m')
ggtsdisplay(diff(lv_df$level_m, lag=96), main='ACF and PACF of diff(level_m)')
lv_ts_wk <- msts(lv$level_m, seasonal.periods=c(96,35064))
decomp_ts <- stl(lv_ts_wk, s.window='period')
decomp_ts <- stl(lv_ts_wk)
decomp_ts <- ts(lv_df$level_m, frequency = 96) %>%
stl(s.window='period') %>%
plot()
decomp_ts <- ts(lv_df$level_m, frequency = 96) %>%
stl(s.window='period') %>%
plot(main='Decomposition of level_m')
decomp_ts <- ts(lv_df$level_m, frequency = 96) %>%
stl(s.window='period') %>%
plot(main='Decomposition of level_m')
decomp_ts <- ts(lv_df$level_m, frequency = 96) %>%
stl(s.window='period') %>%
plot(main='Decomposition of level_m')
decomp_ts <- ts(lv_df$level_m, frequency = 96) %>%
stl(s.window='period') %>%
plot(main='Decomposition of level_m')
decomp_ts <- ts(lv_df$level_m, frequency = 96) %>%
stl(s.window='period') %>%
plot(main='Decomposition of level_m',
xlab='Time (days)')
decomp_ts <- ts(lv_df$level_m, frequency = 96) %>%
stl(s.window='period') %>%
plot(main='Decomposition of level_m', xlab='Time (days)')
decomp_ts <- ts(lv_df$level_m, frequency = 96) %>%
stl(s.window='period') %>%
plot(main='Decomposition of level_m', xlab='Time (days)')
decomp_ts <- ts(lv_df$level_m, frequency = 96) %>%
stl(s.window='period') %>%
plot(main='Decomposition of level_m')
decomp_ts <- ts(lv_df$level_m, frequency = 96) %>%
stl(s.window='period') %>%
plot(main='Decomposition of level_m', xlab='Time (days)')
decomp_ts <- ts(lv_df$level_m, frequency = 96) %>%
stl(s.window='period') %>%
plot(main='Decomposition of level_m', xy.labels='Time (days)')
decomp_ts <- ts(lv_df$level_m, frequency = 96) %>%
stl(s.window='period') %>%
plot(main='Decomposition of level_m')
decomp_ts <- ts(lv_df$level_m, frequency = 96) %>%
stl(s.window='period') %>%
plot(main='Decomposition of level_m', xlab='test')
decomp_ts <- ts(lv_df$level_m, frequency = 96) %>%
stl(s.window='period') %>%
plot(main='Decomposition of level_m')
decomp_ts <- ts(lv_df$level_m, frequency = 96) %>%
stl(s.window='periodic') %>%
plot(main='Decomposition of level_m')
decomp_ts <- ts(lv_df$level_m, frequency = 96) %>%
stl() %>%
plot(main='Decomposition of level_m')
decomp_ts <- ts(lv_df$level_m, frequency = 96) %>%
stl(s.window=97) %>%
plot(main='Decomposition of level_m')
decomp_ts <- ts(lv_df$level_m, frequency = 96) %>%
stl(s.window='periodic') %>%
plot(main='Decomposition of level_m')
ggtsdisplay(diff(diff(lv_df$level_m, lag=96)), main='ACF and PACF of diff(level_m)')
ggtsdisplay(diff(lv_df$level_m, lag=96), main='ACF and PACF of diff(level_m)')
ggtsdisplay(diff(diff(lv_df$level_m, lag=96)), main='ACF and PACF of diff(level_m)')
ggtsdisplay(lv_df$level_m, main='ACF and PACF of level_m')
ggtsdisplay(diff(lv_df$level_m, lag=96), main='ACF and PACF of diff(level_m)')
adf.test(lv_df$level_m)
?adf.test
library(tseries)
adf.test(lv_df$level_m)
adf.test(lv_df$level_m)
adf.test(lv_df$level_m, k=96)
adf.test(lv_df$level_m, k=96)
?adf.test
a <- adf.test(lv_df$level_m, k=96)
a$statistic
a$parameter
a$alternative
a$method
adf.test(lv_df$level_m, k=96)
lv_ts <- msts(lv_df$level_m, seasonal.periods=c(96,35064))
auto_fit <- auto.arima(lv_ts, seasonal=FALSE, xreg=fourier(lv_ts, K=c(4,1)))
plot(forecast(auto_fit, h=192, xreg=fourier(lv_ts, K=c(4,1), h=192)))
